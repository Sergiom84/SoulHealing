-- Tabla para registrar los ejercicios completados por fecha
CREATE TABLE IF NOT EXISTS exercise_records (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  exercise_id INTEGER NOT NULL,
  completed_date DATE NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  
  -- Restricción única para evitar duplicados por usuario y fecha
  UNIQUE(user_id, completed_date)
);

-- Políticas de seguridad RLS (Row Level Security)
ALTER TABLE exercise_records ENABLE ROW LEVEL SECURITY;

-- Política para que los usuarios solo puedan ver sus propios registros
CREATE POLICY "Users can view their own exercise records" 
  ON exercise_records 
  FOR SELECT 
  USING (auth.uid() = user_id);

-- Política para que los usuarios solo puedan insertar sus propios registros
CREATE POLICY "Users can insert their own exercise records" 
  ON exercise_records 
  FOR INSERT 
  WITH CHECK (auth.uid() = user_id);

-- Política para que los usuarios solo puedan actualizar sus propios registros
CREATE POLICY "Users can update their own exercise records" 
  ON exercise_records 
  FOR UPDATE 
  USING (auth.uid() = user_id);

-- Política para que los usuarios solo puedan eliminar sus propios registros
CREATE POLICY "Users can delete their own exercise records" 
  ON exercise_records 
  FOR DELETE 
  USING (auth.uid() = user_id);

-- Índice para mejorar el rendimiento de las consultas por usuario y fecha
CREATE INDEX IF NOT EXISTS exercise_records_user_id_completed_date_idx 
  ON exercise_records(user_id, completed_date);
